{
    "collab_server" : "",
    "contents" : "library(shiny)\n\nshinyUI(fluidPage(\n  tags$head(\n    #  tags$style(type='text/css', \"input { width: 100%; }\",\"label {width: 100%; font-size:100%; font-style: 'Lobster', cursive;}\")# control numericInput box\n    #  ,\n    tags$style(type='text/css',\"shiny-bound-output,.well {background-color: #99CCFF; font-size:100%; } \")#  control font / ineffective\n  ),\n  # Application title\n  navbarPage(\n    \"Flight Information\",\n    # Sidebar with a slider input for number of bins\n    sidebarLayout(\n      sidebarPanel((\"Enter the departure city\"),\n                   selectInput(inputId = \"year\",\"Select Year\",\n                               choices=list(\"2011\" = 2011, \"2012\" = 2012, \"2013\" = 2013, \"2014\" = 2014,\n                                            \"2015\" = 2015, \"2016\" = 2016), selected =2011),\n                   conditionalPanel(\n                     condition = \"input.year != 2016\",\n                     selectInput(inputId = \"quarter\",\"Select Quarter\",\n                                 choices=list(\"1st Quarter\"= 1,\"2nd Quarter\"= 2, \"3rd Quarter\"= 3,\n                                              \"4th Quarter\"= 4), selected =1),\n                     \n                       uiOutput(\"city_list_dep1\"),#departure city selection\n                       uiOutput(\"city_list_arr1\") #arrival city selection\n                   ),\n                   conditionalPanel(\n                     condition = \"input.year == 2016\",\n                       selectInput(inputId = \"quarter\",\"Select Quarter\",\n                                   choices=list(\"1st Quarter\"= 1,\"2nd Quarter\"= 2), selected =1),\n                        uiOutput(\"city_list_dep2\"),#departure city selection\n                        uiOutput(\"city_list_arr2\")#arrival city selection\n                   ),\n                   div(class=\"busy\",\n                       img(src=\"https://67.media.tumblr.com/c253febcead83cca923d19667d927e0f/tumblr_nygzawRGh91qzdga6o1_250.gif\")\n                   )\n      ),\n      \n\n      \n      mainPanel(\n        tabsetPanel(\n        tabPanel(h4(\"Departure Analysis\", style= \"font-family: 'Bangers'; font-weight: 500; line-height:1.1;color:green\"),\n                 fluidRow(\n                   if(\"city_no_out\">800){\n                   plotOutput('stat_depart_city_out1', height = \"1000px\")\n                   }\n                   else{\n                     plotOutput('stat_depart_city_out1', height = \"200px\")\n                   }\n                 ),\n                 \n                 fluidRow(\n                   plotOutput(\"stat_depart_city_out2\", height = \"1000px\")\n                 ),\n                 \n        list(\n                     plotOutput(\"stat_depart_city_out34\"), plotOutput(\"formula_summary_out_put\")\n                     )\n        \n \n        ),\n        tabPanel(#\"Departure Visualization\",\n                 h4(\"Departure Visualization\", style= \"font-family: 'Bangers'; font-weight: 500; line-height:1.1;color:purple\"),\n                 list(\n                   plotOutput(\"depart_city_out\"))\n                 \n                 \n        ),\n        tabPanel(#\"Arrival Analysis\",\n                 h4(\"Arrival Analysis\", style= \"font-family: 'Bangers'; font-weight: 500; line-height:1.1;color:grey\"),\n                 \n                   fluidRow(\n                   if(\"city_no_out\">800){\n                     plotOutput('stat_arrival_city_out1', height = \"1000px\")\n                   }\n                   else{\n                     plotOutput('stat_arrival_city_out1', height = \"200px\")\n                   }\n                 ),\n                 \n                 fluidRow(\n                   plotOutput(\"stat_arrival_city_out2\", height = \"1000px\")\n                 ),\n                 \n                 list(\n                   plotOutput(\"stat_arrival_city_out34\"),plotOutput(\"formula_summary_arrival_out_put\")\n                   )\n                 \n        ),\n        tabPanel(#\"Arrival Visualization\",\n                 h4(\"Arrival Visualization\", style= \"font-family: 'Bangers'; font-weight: 500; line-height:1.1;color:orange\"),\n                 list(\n                   plotOutput(\"arrival_city_out\")\n                   )\n                 \n                 \n        ),\n        tabPanel(#\"Fare Analysis\",\n                 h4(\"Baggage information & Fare Analysis\", style= \"font-family: 'Bangers'; font-weight: 500; line-height:1.1;color:dark pink\"),\n                 list(\n                   plotOutput(\"q_time_trend_given_year\"),\n                   plotOutput(\"qtime_across_out\"),\n                   htmlOutput(\"baggage_largest_out\"),\n                   imageOutput(\"baggage_lowest_out\")\n                   )\n         \n        ),\n        tabPanel(#\"Help\",\n                 h4(\"Help\", style= \"font-family: 'Bangers'; font-weight: 500; line-height:1.1;color:blue\"),\n                 h2(helpText('Tutorial:')),\n                 span(helpText(\"Airlines tend to offer a broad range of prices in any given market, and it is unlikely that the average fares from each travel & booking website will be the same as any particular fare offered. Nevertheless, information about average fares charged, including fares charged by dominant carriers and lower-cost competing carriers where available, can provide useful consumer information. The fare comparisons between markets allow consumers to evaluate prices further and make the better purchase decision.\")),\n                 span(helpText(\"The “Flight Information” app allows users to select the departure city and arrival city they are especially interested in, and to monitor the seasonal flight price fluctuation along with the baggage fare information. Our goal is to assist users in making average fare comparisons from each selected quarter within a given year (or across different years) and to help users to plan out their travel schedules ahead of time.\")),\n                 span(helpText(\"Users could enter the departure and arrival city on the left-hand side of the app page, and the outputs under each tab would include the “Baggage information & Time Trend,” the “Departure Analysis”， the “Arrival Analysis” and the “Fare Analysis” respectively. By choosing from the year of 2011 through 2015 and each quarter in a year, the app would generate analytical graphs and tables under each result section that specifies the airline fare-related information.\")),\n                \n                 h4(helpText('Data source:')),\n                 span(helpText(\"Each year, the Department of Transportation releases a report provided information about average prices being paid by consumers in the 1,000 largest domestic city-pair markets within the 48 contiguous states. These markets account for approximately 75 percent of all 48 contiguous state passengers and 70 percent of total domestic passengers. This shiny app extracts the “table 6” from this report that lists all city-pair markets that average the passengers each day.\")),\n                 span(helpText(\"We have processed the raw data in several steps. First, we have used the “gsub” function to delete the additional brackets and to find the different departure city and arrival city. Second, we have used the “Geocode” package to search the longitude and latitude for each unique city. Finally, we have added the new column to list all the longitudes and latitudes for each departure and arrival city.\")),\n                 \n                 h4(helpText('Departure Analysis:')),\n                 span(helpText(\"In the section of departure analysis, the app generates four graphs that provide the statistical analysis on the average flight fare from departure city to different arrival destinations and the average passenger numbers from departure city to various arrival destinations. The graph descriptions are as the following:\")),\n                 span(helpText(\"1. Graph 1 presents the average fare from departure city to other arrival cities with the fare listed on X-axis and each destination cities listed on Y-axis.\")),\n                 span(helpText(\"2. Graph 2 shows the average passenger numbers from departure city to other arrival cities with the average passenger numbers listed on X-axis and each destination cities listed on Y-axis. \")),\n                 span(helpText(\"3. Graph 3 & Graph 4: We have conducted linear regression analysis on the relationship between travel miles and flight fare as well as the relationship between passenger numbers and flight fare respectively on each departure city. The correlation coefficient is labeled on graph 3 and graph 4.\")),\n                 \n                 h4(helpText('Departure Visualization:')),\n                 span(helpText(\"In the section of departure visualization, the app generates a map graph that lay out the route(s) with a various price range in different color(s) from selected departure city to arrival cities. For each given departure city as the starting point, the arrow in this graph represents the route from selected departure city to arrival cities and each distinctive color matches particular average airfare range.\")),\n                 \n                 h4(helpText('Arrival Analysis:')),\n                 span(helpText(\"In the section of arrival analysis, the app generates four graphs that provide the statistical analysis on the average flight fare of arrival city from different departure cities and the average passenger numbers of arrival city from various departure cities. The graph descriptions are as the following:\")),\n                 span(helpText(\"1. Graph 1 presents the average fare of arrival city from other departure cities with the fare listed on X-axis and each departure cities listed on Y-axis.\")),\n                 span(helpText(\"2. Graph 2 shows the average passenger numbers of arrival city from other departure cities with the average passenger numbers listed on X-axis and each departure cities listed on Y-axis.\")),\n                 span(helpText(\"3. Graph 3 & Graph 4: We have conducted linear regression analysis on the relationship between travel miles and flight fare as well as the relationship between passenger numbers and flight fare respectively on each selected arrival city. The correlation coefficient is labeled on graph 3 and graph 4.\")),\n                 \n                 h4(helpText('Arrival Visualization:')),\n                 span(helpText(\"In the section of arrival visualization, the app generates the map graph that lay out the route(s) with the various price range in different color(s) from selected arrival city to departure cities. For each given arrival city as the starting point, the arrow represents the route of selected arrival city from departure cities and each distinctive color matches particular average airfare range.\")),\n                 \n                 h4(helpText('Fare Analysis:')),\n                 span(helpText(\"In this section, the app generates the graphs that display the time pattern for specific flight route. The descriptions of the figures and tables are the following:\")),\n                 span(helpText(\"Graph 1: Graph 1 specifies three fare types - the average fare for all carriers, the average fare for the largest carrier in market share and the average fare for the lowest carrier in market share quarterly in a given year.\")),\n                 span(helpText(\"Graph 2: Graph 2 specifies three fare types - the average fare for all carriers, the average fare for the largest carrier in market share and the average fare for the lowest carrier in market share in a selected quarter through the year 2011 to 2015.\")),\n                 \n                 h4(helpText('Further information:')),\n                 span(helpText(\"We thank you for your time. If you have any question that could not be answered by our “Help” section, feel free to contact the app developers:\")),\n                 span(helpText(\"Johnny (yifu_liu@brown.edu)\")),\n                 span(helpText(\"Winnie (wenyue_xing@brown.edu)\")),\n                 span(helpText(\"Fang (fang_hu@brown.edu)\")),\n                 span(helpText(\"Scarlett (shaolingyun_guo@brown.edu)\")),\n                 span(helpText(\"Rosa (rouyu_xie@brown.edu)\"))\n        )\n        )\n       )\n      )\n    )\n  )\n)",
    "created" : 1481129597257.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2995658715",
    "id" : "EEF074B0",
    "lastKnownWriteTime" : 1481130240,
    "last_content_update" : 1481130240396,
    "path" : "~/Downloads/final 6/ui.R",
    "project_path" : "ui.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}