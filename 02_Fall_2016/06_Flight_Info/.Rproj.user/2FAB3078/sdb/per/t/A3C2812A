{
    "collab_server" : "",
    "contents" : "#library(\"ggmap\")\n#library(maptools)\n#library(maps)\n#library(dplyr)\n#library(stringr)\n#library(ggplot2)\n#library(gridExtra)\nsource(\"check_packages.R\")\ncheck_packages(c(\"ggmap\",\"maptools\",\"dplyr\",\"stringr\", \"maps\", \"ggplot2\", \"gridExtra\", \"pander\", \"reshape2\")) \n\n#load all required data\ndata2016<-read.csv('2016_table6_withlon.csv',header=TRUE,stringsAsFactors=FALSE)\ndata2015<-read.csv('2015_table6_withlon.csv',header=TRUE,stringsAsFactors=FALSE)\ndata2014<-read.csv('2014_table6_withlon.csv',header=TRUE,stringsAsFactors=FALSE)\ndata2013<-read.csv('2013_table6_withlon.csv',header=TRUE,stringsAsFactors=FALSE)\ndata2012<-read.csv('2012_table6_withlon.csv',header=TRUE,stringsAsFactors=FALSE)\ndata2011<-read.csv('2011_table6_withlon.csv',header=TRUE,stringsAsFactors=FALSE)\nbaggage_tab<-read.csv('useful_buggage.csv',header=TRUE,stringsAsFactors=FALSE)\n\n#=================================================================================================================================\n#                                               Basic Function\n#=================================================================================================================================\n#function to get year data for selected year\nget_year_data<-function(year){\n  ydata<-c()\n  for(j in 2011:2016){\n    if(year==j){\n      filename<-paste0(j,\"_table6_withlon.csv\")\n      ydata<-read.csv(filename,header=TRUE,stringsAsFactors=FALSE)\n\n    }\n  }\n  return(ydata)#return the year data for us\n}\n#=================================================================================================================================\n#function to get quarter data for selected year\nget_quart_data<-function(year,quart){\n  qdata<-c()\n  for(j in 2011:2016){\n    if(year==j){\n      filename<-paste0(j,\"_table6_withlon.csv\")\n      ydata<-read.csv(filename,header=TRUE,stringsAsFactors=FALSE)\n      for(i in 1:4){\n        if(quart==i){\n          qdata<-ydata[ydata$quarter==i,]\n        }\n      }\n    }\n  }\n  return(qdata)#return the quarter data for us\n}\n#=================================================================================================================================\n#function to identify all departure city selections after year is selected\ncity_sel_after_yrs<-function(year){\n  city1_list<-c()\n  for(j in 2011:2016){\n    if(year==j){\n      filename<-paste0(j,\"_table6_withlon.csv\")\n      #print(filename)\n      ydata<-read.csv(filename,header=TRUE,stringsAsFactors=FALSE)\n      city1_inuse<-ydata$city1\n      city1_list<-unique(city1_inuse)\n    }\n    }\n  return(city1_list)\n}\n#=================================================================================================================================\n\n#function to get identify all possible arrivals for city2 if we selected departure for city1 in selected year\narrival_city_after_dcity<-function(year, dcity){\n  arrival_city_list<-c()\n  for(q in 2011:2016){\n    if(year==q){\n      filename<-paste0(q,\"_table6_withlon.csv\")\n      ydata<-read.csv(filename,header=TRUE,stringsAsFactors=FALSE)\n      acity<-unique(ydata[(ydata)$city1==dcity,]$city2)\n      return(acity)\n    }\n  }\n}\n#=================================================================================================================================\n\ncity_number<-function(stat_city_sel,ydata,qdata){\n  #cityname<-\"New York City, NY\"\n  cityname<-stat_city_sel\n  table6<-data2016\n  citydata<-table6 %>% filter(str_detect(city1, cityname))\n  citydataframe<-as.data.frame(citydata)\n  j<-length(citydataframe$city2)\n  #j<-\"Chicago\"\n  return(j)\n}\n\n#=================================================================================================================================\n#                                               Visulization Function\n#=================================================================================================================================\n#visualization part:\n#for departure city visualization:\ncity_vis_depart<-function(start_city, sel_year,sel_quarter){\n  \n  table.read<-get_quart_data(sel_year, sel_quarter) # get quarter data by year number and quarter number\n  \n  n<-length(table.read$fare)\n  \n  for(i in 1:n){\n    if(table.read$fare[i]<=150){ \n      table.read$Price_Range[i]=\"Fare <$150\"  \n    }\n    if(table.read$fare[i]<=200&table.read$fare[i]>150) {\n      table.read$Price_Range[i]=\"Fare $150~200\"\n    }\n    if(table.read$fare[i]<=250&table.read$fare[i]>200) {\n      table.read$Price_Range[i]=\"Fare $200~250\"\n    }\n    if(table.read$fare[i]<=300&table.read$fare[i]>250) {\n      table.read$Price_Range[i]=\"Fare $250~300\"\n    }\n    if(table.read$fare[i]<=350&table.read$fare[i]>300) {\n      table.read$Price_Range[i]=\"Fare $300~350\"\n    }\n    if(table.read$fare[i]>350){ \n      table.read$Price_Range[i]=\"Fare $350~\"  \n    }\n  }\n  \n  table.select.1<-filter(table.read,table.read$city1==start_city)\n  states_names <- map_data(\"state\")\n  \n  # plot for the departure city\n  p.d<-ggplot()\n  p.d<-p.d + geom_polygon(data=states_names, aes(x=long, y=lat,group=group),colour=\"white\", fill=\"black\")\n  p.d_title<-p.d+ggtitle(paste(\"Visualization of air fare from\",start_city,\"to other cities\"))+xlab(\"Longtitude\")+ylab(\"Latitude\")\n  p.d_city<-p.d_title+geom_point( data=table.select.1, aes(x=lon2.long, y=lon2.lat), color=\"red\",size=2)\n  p.d_withpoint<-p.d_city+geom_point(data=table.select.1, aes(x=lon1.long, y=lon1.lat),color=\"blue\",size=5)\n  p.d_segment<-p.d_withpoint+geom_segment(data=table.select.1,aes(x=lon1.long,y=lon1.lat,xend=lon2.long,yend=lon2.lat,colour=Price_Range,fill=Price_Range),arrow=arrow(length=unit(0.3,\"cm\")))\n  p.d_withtext<-p.d_segment+geom_text(data=table.select.1,aes(x=lon2.long, y=lon2.lat,label = city2),color=\"chocolate1\",size=2.8)\n  p.d_output<-p.d_withtext+theme(panel.background = element_rect(fill = \"white\"))\n  \n  return(p.d_output)\n}\n#=================================================================================================================================\n#for arrival city visualization:\ncity_vis_arrive<-function(end_city, sel_year,sel_quarter){\n  \n  table.read<-get_quart_data(sel_year, sel_quarter) # get quarter data by year number and quarter number\n  n<-length(table.read$fare)\n  \n  for(i in 1:n){\n    if(table.read$fare[i]<=150){ \n      table.read$Price_Range[i]=\"Fare <$150\"  \n    }\n    if(table.read$fare[i]<=200&table.read$fare[i]>150) {\n      table.read$Price_Range[i]=\"Fare $150~200\"\n    }\n    if(table.read$fare[i]<=250&table.read$fare[i]>200) {\n      table.read$Price_Range[i]=\"Fare $200~250\"\n    }\n    if(table.read$fare[i]<=300&table.read$fare[i]>250) {\n      table.read$Price_Range[i]=\"Fare $250~300\"\n    }\n    if(table.read$fare[i]<=350&table.read$fare[i]>300) {\n      table.read$Price_Range[i]=\"Fare $300~350\"\n    }\n    if(table.read$fare[i]>350){ \n      table.read$Price_Range[i]=\"Fare $350~\"  \n    }\n  }\n  \n  table.select.2<-filter(table.read,table.read$city2==end_city)\n  states_names <- map_data(\"state\")\n  \n  #plot for arrival city\n  p.a<-ggplot()\n  p.a<-p.a + geom_polygon(data=states_names, aes(x=long, y=lat,group=group),colour=\"white\", fill=\"black\")\n  p.a_title<-p.a+ggtitle(paste(\"Visualization of air fare from other cities to\",end_city))+xlab(\"Longtitude\")+ylab(\"Latitude\")\n  p.a_city<-p.a_title+geom_point( data=table.select.2, aes(x=lon2.long, y=lon2.lat), color=\"red\",size=5)\n  p.a_withpoint<-p.a_city+geom_point(data=table.select.2, aes(x=lon1.long, y=lon1.lat),color=\"blue\",size=2)+geom_segment(data=table.select.2,aes(x=lon1.long,y=lon1.lat,xend=lon2.long,yend=lon2.lat,color=Price_Range,fill=Price_Range), arrow=arrow(length=unit(0.3,\"cm\")))\n  p.a_withtext<-p.a_withpoint+geom_text(data=table.select.2,aes(x=lon1.long, y=lon1.lat,label = city1),color=\"chocolate1\",size=2.8)\n  p.a_final<-p.a_withtext+theme(panel.background = element_rect(fill = \"white\"))\n  return(p.a_final)\n}\n#=================================================================================================================================\n#                                               Statistical analysis and baggage functions\n#=================================================================================================================================\n#statistical analysis and baggage information part:\n# For a given city in city1, like 'NYC', select all the cities that have flight from the\n# given city, store the data in 'citydataframe'\n######         Departure analysis      #####\nstatistical_departp1<-function(cityname, year, quarter){\n  quarterdata<-get_quart_data(year,quarter)\n  citydata<-quarterdata %>% filter(str_detect(city1, cityname))\n  citydataframe<-as.data.frame(citydata)\n  \n  \n  # plot the graph of average fare versus destination cities (city2)\n  \n  titlenames_1<-paste('The average fares of airlines from ',cityname,' to other cities')\n  p1<-ggplot(citydataframe, aes(city2, fare)) + \n    xlab('destination') + ylab(' Overall average fare')  + ggtitle(titlenames_1) +\n    geom_bar(stat='identity', fill=\"#FF9999\", colour=\"black\") +coord_flip()\n  return(p1)\n}\n#=================================================================================================================================\nstatistical_departp2<-function(cityname, year, quarter){\n  quarterdata<-get_quart_data(year,quarter)\n  citydata<-quarterdata %>% filter(str_detect(city1, cityname))\n  citydataframe<-as.data.frame(citydata)\n  \n  \n  #  plot the graph of average passenger versus destination cities (city2)\n  titlenames_2<-paste('The Passengers per day of airlines from ',cityname,' to other cities')\n  p2<-ggplot(citydataframe, aes(city2, passengers)) + \n    xlab('Destination') + ylab('Passengers per day')  + ggtitle(titlenames_2) +\n    geom_bar(stat='identity', fill=\"red\", colour=\"black\") +coord_flip()\n  return(p2)\n  \n}\n#=================================================================================================================================\nstatistical_departp3p4<-function(cityname,year,quarter){\n  quarterdata<-get_quart_data(year,quarter)\n  citydata<-quarterdata %>% filter(str_detect(city1, cityname))\n  citydataframe<-as.data.frame(citydata)\n  \n  # draw the scatterplot of overall average fare versus city distance for different city2\n  \n  cor_fare_dis<-cor(citydataframe$nsmiles,citydataframe$fare)\n  text0<-paste('Correlation between average fare and distance is ', round(cor_fare_dis,digits = 3))\n  text0<-as.character(text0)\n  x0_posi<- min(citydataframe$nsmiles)+ (max(citydataframe$nsmiles)-min(citydataframe$nsmiles))/3\n  y0_posi<-max(citydataframe$fare)-\n    (max(citydataframe$fare)-min(citydataframe$fare))/8\n  p3<-ggplot(citydataframe,aes(nsmiles,fare)) + geom_point() + geom_smooth() + \n    annotate(\"text\", x=x0_posi, y=y0_posi, label= text0,size=3.5,colour='red') + \n    xlab('distance') + ylab('Average fare')+\n    ggtitle('The relationship between overall average fare and city distance')\n  #p3\n  \n  \n  # draw the scatterplot of overall average fare versus Passengers per day for different city2\n  \n  cor_fare_pasger<-cor(citydataframe$passengers,citydataframe$fare)\n  text00<-paste('Correlation between average fare and passengers is ', round(cor_fare_pasger,digits = 3))\n  text00<-as.character(text00)\n  x00_posi<- min(citydataframe$passengers)+ (max(citydataframe$passengers)-min(citydataframe$passengers))/2\n  y00_posi<-max(citydataframe$fare)-\n    (max(citydataframe$fare)-min(citydataframe$fare))/8\n  p4<-ggplot(citydataframe,aes(passengers,fare)) + geom_point() + \n    geom_smooth()+ annotate(\"text\", x=x00_posi, y=y00_posi, label= text00,size=3.5,colour='red') + \n    xlab('Passengers per day') + ylab('Average fare')+ggtitle('The relationship between overall average fare and passengers per day')\n  #p4\n  \n  return(grid.arrange(p3,p4,nrow=2))\n}\n\n#=================================================================================================================================\n##??????????\n# summarise the numbers that each carrier be the largest carrier and be the lowest fare carrier for the given whole year\nsumma_depart<-function(year){\ntable_data<-get_year_data(year)\nlarg_carrier<-table_data %>% group_by(carrier_lg) %>% summarise(app_num=n())\nlow_fare_carri<-table_data %>% group_by(carrier_low) %>% summarise(app_num2=n())\n\n# draw the graphs of numbers versus carrier\n\ncolnames(larg_carrier)<-c('carrier_name','number_of_being_largest')\ncolnames(low_fare_carri)<-c('carrier_name','number_of_being_lowest')\n\ncarrier<-full_join(larg_carrier,low_fare_carri)\n\ncarrier[is.na(carrier$number_of_being_largest),2]<-0\ncarrier[is.na(carrier$number_of_being_lowest),2]<-0\n\ncarrier_data<-melt(carrier,id.vars = 'carrier_name')\nggplot(carrier_data, aes(carrier_name, value)) + xlab('Carrier') + ylab('Number') + \n  geom_bar(aes(fill = variable), position = \"dodge\", stat=\"identity\",width = 0.8, colour=\"black\") + \n  scale_fill_discrete(name =\"Types\",breaks=c(\"number_of_being_largest\", \"number_of_being_lowest\"),labels=c(\"Numbers of carrier \\n being the top \\n market share leader\", \"Numbers of carrier \\n being the lowest \\n average fare provider\"))+\n  ggtitle('Number of carrier being the top market share leaders \\n (the lowest average fare provider) for each carrier')\n\n}\n#=================================================================================================================================\n\n######         Arrival analysis      #####\n\n# For a given city in city1, like 'NYC', select all the cities that have flight from the\n# given city, store the data in 'citydataframe'\nstatistical_arrivalp1<-function(cityname.2, year, quarter){\n  \nquarterdata<-get_quart_data(year,quarter)\ncitydata.2<-quarterdata %>% filter(str_detect(city2, cityname.2))\ncitydataframe.2<-as.data.frame(citydata.2)\n\n# plot the graph of overall average fare versus destination cities (city2)\n\ntitlenames_1.2<-paste('The average fares of airlines from other cities to',cityname.2)\np1.2<-ggplot(citydataframe.2, aes(city1, fare)) + \n  xlab('destination') + ylab(' Overall average fare')  + ggtitle(titlenames_1.2) +\n  geom_bar(stat='identity', fill=\"#FF9999\", colour=\"black\") +coord_flip()\nreturn(p1.2)\n}\n#=================================================================================================================================\n\nstatistical_arrivalp2<-function(cityname.2, year, quarter){\n  \nquarterdata<-get_quart_data(year,quarter)\ncitydata.2<-quarterdata %>% filter(str_detect(city2, cityname.2))\ncitydataframe.2<-as.data.frame(citydata.2)\n\n#  plot the graph of Passengers versus destination cities (city2)\ntitlenames_2.2<-paste('The Passengers per day of airlines from other cities to ',cityname.2)\np2.2<-ggplot(citydataframe.2, aes(city1, passengers)) + \n  xlab('Destination') + ylab('Passengers per day')  + ggtitle(titlenames_2.2) +\n  geom_bar(stat='identity', fill=\"red\", colour=\"black\") +coord_flip()\nreturn(p2.2)\n}\n#=================================================================================================================================\n# draw the scatterplot of overall average fare versus city distance for different city1\nstatistical_arrivalp3p4<-function(cityname.2, year, quarter){\n  \nquarterdata<-get_quart_data(year,quarter)\ncitydata.2<-quarterdata %>% filter(str_detect(city2, cityname.2))\ncitydataframe.2<-as.data.frame(citydata.2)\n\ncor_fare_dis.2<-cor(citydataframe.2$nsmiles,citydataframe.2$fare)\ntext1<-paste('Correlation between average fare and distance is ', round(cor_fare_dis.2,digits = 3))\ntext1<-as.character(text1)\nx_posi<- min(citydataframe.2$nsmiles)+ (max(citydataframe.2$nsmiles)-min(citydataframe.2$nsmiles))/3\ny_posi<-max(citydataframe.2$fare)-\n  (max(citydataframe.2$fare)-min(citydataframe.2$fare))/8\np3.2<-ggplot(citydataframe.2,aes(nsmiles,fare)) + geom_point() + geom_smooth() + annotate(\"text\", x=x_posi, y=y_posi, label= text1,size=3.5,colour='red') + xlab('distance') + ylab('Average fare')+\n  ggtitle('The relationship between overall average fare and city distance')\n#p3.2\n\n# draw the scatterplot of overall average fare versus Passengers per day for different city1\ncor_fare_pasger.2<-cor(citydataframe.2$passengers,citydataframe.2$fare)\ntext11<-paste('Correlation between average fare and passengers is ', round(cor_fare_pasger.2,digits = 3))\ntext11<-as.character(text11)\nx1_posi<- min(citydataframe.2$passengers)+ (max(citydataframe.2$passengers)-min(citydataframe.2$passengers))/2\ny1_posi<-max(citydataframe.2$fare)-\n  (max(citydataframe.2$fare)-min(citydataframe.2$fare))/8\np4.2<-ggplot(citydataframe.2,aes(passengers,fare)) + geom_point() + \n  geom_smooth()+ annotate(\"text\", x=x1_posi, y=y1_posi, label= text11,size=3.5,colour='red') + xlab('Passengers per day') + ylab('Average fare')+ggtitle('The relationship between overall average fare and passengers per day')\n#p4.2\n\nreturn(grid.arrange(p3.2,p4.2,nrow=2))\n}\n#=================================================================================================================================\n# summarise the numbers that each carrier be the largest carrier and be the lowest fare carrier for the given whole year\nsumma_arrival<-function(year){\ntable6<-get_year_data(year)\nlarg_carrier.2<-table6 %>% group_by(carrier_lg) %>% summarise(app_num=n())\nlow_fare_carri.2<-table6 %>% group_by(carrier_low) %>% summarise(app_num2=n())\n\n# draw the graphs of numbers versus carrier\n\ncolnames(larg_carrier.2)<-c('carrier_name','number_of_being_largest')\ncolnames(low_fare_carri.2)<-c('carrier_name','number_of_being_lowest')\n\ncarrier.2<-full_join(larg_carrier.2,low_fare_carri.2)\n\ncarrier.2[is.na(carrier.2$number_of_being_largest),2]<-0\ncarrier.2[is.na(carrier.2$number_of_being_lowest),2]<-0\n\ncarrier_2<-melt(carrier.2,id.vars = 'carrier_name')\nj<-ggplot(carrier_2, aes(carrier_name, value)) + xlab('Carrier') + ylab('Number') + geom_bar(aes(fill = variable), position = \"dodge\", stat=\"identity\",width = 0.8, colour=\"black\") + \n  scale_fill_discrete(name =\"Types\",breaks=c(\"number_of_being_largest\", \"number_of_being_lowest\"),labels=c(\"Numbers of carrier \\n being the top \\n market share leader\", \"Numbers of carrier \\n being the lowest \\n average fare provider\"))+\n  ggtitle('Number of carrier being the top market share leaders \\n (the lowest average fare provider) for each carrier')\nreturn(j)\n}\n#=================================================================================================================================\n\n#Quarterly time trend analysis in a given year\nquart_time_trend_analysis<-function(dcity, acity, year){\n\ncity1_name<-dcity\ncity2_name<-acity\ntable6_2015<-data2015\n\n# select the data in a whole year for the given two cities\nselec_data<-table6_2015 %>% filter(str_detect(city1, city1_name)) %>% \n  filter(str_detect(city2, city2_name))\n\n\n# plot the data in a whole year for the given two cities\n\nselec_data_fare<-selec_data %>% select(quarter, fare, fare_lg, fare_low)\nfare_min<-min(selec_data_fare$fare,selec_data_fare$fare_lg,selec_data_fare$fare_low)\nfare_max<-max(selec_data_fare$fare,selec_data_fare$fare_lg,selec_data_fare$fare_low)\nfare_low_boud<-floor(fare_min/100)*100\nfare_upper_boud<-ceiling(fare_max/25)*25\n\nselec_fare<-melt(selec_data_fare, id.vars = 'quarter')\n# output\n  ggplot(selec_fare, aes(quarter, value)) + ylab('Average Fare') + \n  geom_bar(aes(fill = variable), position = \"dodge\", stat=\"identity\",width = 0.8) + \n  coord_cartesian(ylim=c(fare_low_boud,fare_upper_boud)) +\n  ggtitle('Quarterly time trend analysis in a given year') +\n  scale_fill_discrete(name =\"Three types \\n of average fare\",breaks=c(\"fare\", \"fare_lg\",\"fare_low\"),labels=c(\"For all carrier\", \"For largest carrier\", \"For lowest carrier\"))\n}\n#=================================================================================================================================\n#The baggage information of the largest carrier for the two cities\nbaggage_infor_largest<-function(dcity, acity, year){\ncity1_name<-dcity\ncity2_name<-acity\ntable6_2015<-data2015\n\nselec_data<-table6_2015 %>% filter(str_detect(city1, city1_name)) %>% \n  #filter(str_detect(city2, city2_name))\n\nname_carrier_lg<-unique(selec_data$carrier_lg)\nbaggage_inf<-baggage_tab %>% filter(IATA_code==name_carrier_lg)\n\n# do data cleaning and format the output table\nco1<-as.character(baggage_inf$IATA_code)\nco2<-as.character(baggage_inf$Airline)\nco3<-as.character(baggage_inf$Carry.On) \nco3<-gsub(\"\\\\s{2,}\", \" \", co3) \nco4<-as.character(baggage_inf$X1st.Checked.Bag)\nco4<-gsub(\"\\\\s{2,}\", \" \", co4) \nco5<-as.character(baggage_inf$X2nd.Checked.Bag)\nco5<-gsub(\"\\\\s{2,}\", \" \", co5) \nbaggage_inf_out<-data.frame(IATA=co1,Airline=co2,carry_on_infor=co3,First_check=co4,Second_check=co5)\n# output\ntitle_name1<-'The baggage information of the largest carrier for the two cities'\npandoc.table(baggage_inf_out, style = \"grid\",caption=title_name1)\nreturn(baggage_inf_out)\n}\n\n#=================================================================================================================================\n#The baggage information of the lowest carrier for the two cities\nbaggage_infor_lowest<-function(dcity, acity, year){\n  city1_name<-dcity\n  city2_name<-acity\n  table6_2015<-data2015\n  \nselec_data<-table6_2015 %>% filter(str_detect(city1, city1_name)) %>% \n  filter(str_detect(city2, city2_name))\n\nname_carrier_low<-unique(selec_data$carrier_low)\nbaggage_low_inf<-baggage_tab %>% filter(IATA_code==name_carrier_low)\n\n#do data cleaning and format the output table\nco11<-as.character(baggage_low_inf$IATA_code)\nco22<-as.character(baggage_low_inf$Airline)\nco33<-as.character(baggage_low_inf$Carry.On) \nco33<-gsub(\"\\\\s{2,}\", \" \", co33) \nco44<-as.character(baggage_low_inf$X1st.Checked.Bag)\nco44<-gsub(\"\\\\s{2,}\", \" \", co44) \nco55<-as.character(baggage_low_inf$X2nd.Checked.Bag)\nco55<-gsub(\"\\\\s{2,}\", \" \", co55) \nbaggage_low_out<-data.frame(IATA=co11,Airline=co22,carry_on_infor=co33,First_check=co44,Second_check=co55)\n\n# output\n#title_name11<-'The baggage information of the lowest carrier for the two cities'\n#j<-pandoc.table(baggage_low_out, style = \"grid\",caption=title_name11)\nreturn(j)\n}\n\n#=================================================================================================================================\n#Time trend analysis in selected quarter across years\nquarter_time_trend_across<-function(dcity, acity, quart){\ncity1_name<-dcity\ncity2_name<-acity\nquart<-as.integer(quart)\ntable6_2015<-data2015;table6_2014<-data2014;table6_2013<-data2013;table6_2012<-data2012;table6_2011<-data2011;\n# select the data of a certain quarter for 2011-2015 for the given two cities\nselect_horiz_data_15<-table6_2015 %>% filter(quarter==quart) %>%\n  filter(str_detect(city1, city1_name)) %>% \n  filter(str_detect(city2, city2_name))\n\nselect_horiz_data_14<-table6_2014 %>% filter(quarter==quart) %>%\n  filter(str_detect(city1, city1_name)) %>% \n  filter(str_detect(city2, city2_name))\n\nselect_horiz_data_13<-table6_2013 %>% filter(quarter==quart) %>%\n  filter(str_detect(city1, city1_name)) %>% \n  filter(str_detect(city2, city2_name))\n\nselect_horiz_data_12<-table6_2012 %>% filter(quarter==quart) %>%\n  filter(str_detect(city1, city1_name)) %>% \n  filter(str_detect(city2, city2_name))\n\nselect_horiz_data_11<-table6_2011 %>% filter(quarter==quart) %>%\n  filter(str_detect(city1, city1_name)) %>% \n  filter(str_detect(city2, city2_name))\n\nselect_horiz_data<-rbind(select_horiz_data_11,select_horiz_data_12,select_horiz_data_13,select_horiz_data_14,select_horiz_data_15)\nselect_horiz_fare<-select_horiz_data %>% select(Year, fare, fare_lg,fare_low)\n\n# plot the data in a whole year for the given two cities\n\nfare2_min<-min(select_horiz_fare$fare,select_horiz_fare$fare_lg,select_horiz_fare$fare_low)\nfare2_max<-max(select_horiz_fare$fare,select_horiz_fare$fare_lg,select_horiz_fare$fare_low)\nfare2_low_boud<-floor(fare2_min/100)*100\nfare2_upper_boud<-ceiling(fare2_max/25)*25\n\nselect_fare_melt<-melt(select_horiz_fare, id.vars = 'Year')\n# following is output\ns<-ggplot(select_fare_melt, aes(Year, value)) + ylab('Average Fare') + \n  geom_bar(aes(fill = variable), position = \"dodge\", stat=\"identity\",width = 0.8) +\n  coord_cartesian(ylim=c(fare2_low_boud,fare2_upper_boud)) + \n  scale_fill_discrete(name =\"Three types \\n of average fare\",breaks=c(\"fare\", \"fare_lg\",\"fare_low\"),labels=c(\"For all carrier\", \"For largest carrier\", \"For lowest carrier\"))+\n  ggtitle('Time trend analysis in selected quarter across years')\nreturn(s)\n}\n\n",
    "created" : 1481129595173.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2248596924",
    "id" : "A3C2812A",
    "lastKnownWriteTime" : 1481130071,
    "last_content_update" : 1481130071573,
    "path" : "~/Downloads/final 6/Code_essential.R",
    "project_path" : "Code_essential.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}