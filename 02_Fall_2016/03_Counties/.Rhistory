library(shiny); runApp('app_2016_12_20.R')
setwd("C:/Users/Jason/Google Drive/Brown/c_stats-computing_1/final_project/mapping_project/counties_submission")
bs <- readRDS("data/basefile.Rds")
bs[bs == "NaN"] <- NA
View(bs)
saveRDS(bs, file = "data/basefile.Rds")
runApp('app_2016_12_20.R')
bs$Total_Crime_Rate <- bs$Total_Crime_Rate * 100000
bs$school_dropout_rate <- bs$school_dropout_rate * 1000000
bs$school_Testscores <- bs$school_Testscores * 100000
setwd("C:/Users/Jason/Google Drive/Brown/c_stats-computing_1/final_project/mapping_project/counties_submission")
bs$migration_inflow_rate <- bs$migration_inflow_rate * 100
bs$migration_inflow_rate <- bs$migration_inflow_rate * 1000
bs$migration_outflow_rate <- bs$migration_outflow_rate * 1000
bs$net_migration_rate <- bs$net_migration_rate * 1000
saveRDS(bs, file = "data/basefile.Rds")
runApp('app_2016_12_20.R')
bs$tax_rate <- bs$tax_rate * 1000
bs$local_Govt_expenditure <- bs$local_Govt_expenditure * 1000
# convert to per 100,000
bs$Total_Crime_Rate <- bs$Total_Crime_Rate * 100000
# transformation for visualizations
bs$migration_inflow_rate <- bs$migration_inflow_rate * 1000
bs$migration_outflow_rate <- bs$migration_outflow_rate * 1000
bs$net_migration_rate <- bs$net_migration_rate * 1000
bs$tax_rate <- bs$tax_rate * 1000
bs$local_Govt_expenditure <- bs$local_Govt_expenditure * 1000
bs$school_dropout_rate <- bs$school_dropout_rate * 1000000
bs$school_Testscores <- bs$school_Testscores * 100000
saveRDS(bs, file = "data/basefile.Rds")
library(Hmisc)
library(dplyr)
library(tidyr)
# code labels
bs <- readRDS("data/basefile.Rds")
labs <- read_excel("data/codebook.xlsx", col_names = T)
var_labs <- data.frame(lb = labs$`Variable Label`,
nm = labs$`Variable Name`)
vlabels <- as.character(var_labs$lb)
names(vlabels) <- var_labs$nm
assign_lab <- function(x) {
Hmisc::label(bs[,x]) <- vlabels[x]
}
Hmisc::label(bs) <- lapply(names(vlabels), assign_lab)
Hmisc::label(bs)
saveRDS(bs, file = "data/basefile.Rds")
runApp('app_2016_12_20.R')
bs <- readRDS("data/basefile.Rds")
bs[bs == "NaN"] <- NA
bs$Total_Crime_Rate <- bs$Total_Crime_Rate * 100000
bs$migration_inflow_rate <- bs$migration_inflow_rate * 1000
bs$migration_outflow_rate <- bs$migration_outflow_rate * 1000
bs$net_migration_rate <- bs$net_migration_rate * 1000
bs$tax_rate <- bs$tax_rate * 1000
bs$school_dropout_rate <- bs$school_dropout_rate * 1000000
bs$school_Testscores <- bs$school_Testscores * 100000
saveRDS(bs, file = "data/basefile.Rds")
labs <- read_excel("data/codebook.xlsx", col_names = T)
var_labs <- data.frame(lb = labs$`Variable Label`,
nm = labs$`Variable Name`)
vlabels <- as.character(var_labs$lb)
names(vlabels) <- var_labs$nm
assign_lab <- function(x) {
Hmisc::label(bs[,x]) <- vlabels[x]
}
Hmisc::label(bs) <- lapply(names(vlabels), assign_lab)
Hmisc::label(bs)
saveRDS(bs, file = "data/basefile.Rds")
runApp('app_2016_12_20.R')
runApp('C:/Users/Jason/Desktop/counties_submission/app_2016_12_20.R')
bs <- readRDS("data/basefile.Rds")
View(bs)
bs$fraction_middleclass
setwd("C:/Users/Jason/Desktop/counties_submission")
library(Hmisc)
library(dplyr)
library(tidyr)
bs <- readRDS("data/basefile.Rds")
View(bs)
labs <- read_excel("data/codebook.xlsx", col_names = T)
var_labs <- data.frame(lb = labs$`Variable Label`,
nm = labs$`Variable Name`)
vlabels <- as.character(var_labs$lb)
names(vlabels) <- var_labs$nm
assign_lab <- function(x) {
Hmisc::label(bs[,x]) <- vlabels[x]
}
Hmisc::label(bs) <- lapply(names(vlabels), assign_lab)
Hmisc::label(bs)
saveRDS(bs, file = "data/basefile.Rds")
bs$PCT_unemployed
label(bs$PCT_unemployed)
labs <- read_excel("data/codebook.xlsx", col_names = T)
var_labs <- data.frame(lb = labs$`Variable Label`,
nm = labs$`Variable Name`)
vlabels <- as.character(var_labs$lb)
names(vlabels) <- var_labs$nm
assign_lab <- function(x) {
Hmisc::label(bs[,x]) <- vlabels[x]
}
Hmisc::label(bs) <- lapply(names(vlabels), assign_lab)
Hmisc::label(bs)
saveRDS(bs, file = "data/basefile.Rds")
runApp('app_2016_12_20.R')
library(shiny); runApp('app_2016_12_20.R')
